<?xml version="1.0" encoding="UTF-8"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.apache.openmeetings</groupId>
		<artifactId>openmeetings-parent</artifactId>
		<version>3.1.0-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>
	<artifactId>openmeetings-web</artifactId>
	<packaging>war</packaging>
	<name>Openmeetings Web</name>
	<description>TODO</description>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<wicket-dashboard.version>0.10</wicket-dashboard.version>
		<select2.version>2.2.2</select2.version>
		<dnd.version>0.6.0</dnd.version>
		<commons-io.version>2.4</commons-io.version>
		<commons-fileupload.version>1.3</commons-fileupload.version>
		<mysql.version>5.1.30</mysql.version>
		<server.webapps>${project.build.directory}/server/webapps</server.webapps>
		<server.lib>${project.build.directory}/server/lib</server.lib>
		<server.webapps.om>${server.webapps}/openmeetings</server.webapps.om>
	</properties>
	<profiles>
		<profile>
			<id>Mysql</id>
			<activation>
				<property>
					<name>db</name>
					<value>mysql</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
					<version>${mysql.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>Quick</id>
			<activation>
				<property>
					<name>quick</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<maven.test.skip>true</maven.test.skip>
				<om.quick.build>true</om.quick.build>
			</properties>
		</profile>
	</profiles>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<archiveClasses>true</archiveClasses>
					<packagingExcludes>**/*.class</packagingExcludes>
					<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
					<skip>${om.quick.build}</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<excludeTransitive>true</excludeTransitive>
							<skip>${om.quick.build}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-web-templates</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<!-- outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory-->
							<outputDirectory>${project.build.directory}/test-classes</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/java</directory>
									<includes>
										<include>**/*.html</include>
										<include>**/*.css</include>
										<include>**/*.js</include>
										<include>**/*.xml</include>
									</includes>
								</resource>
							</resources>
							<resources>
								<resource>
									<directory>${project.parent.basedir}/openmeetings-service/src/main/java</directory>
									<includes>
										<include>**/*.html</include>
										<include>**/*.css</include>
										<include>**/*.js</include>
										<include>**/*.xml</include>
									</includes>
								</resource>
							</resources>
							<skip>${om.quick.build}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>move-openjpa-resources</id>
						<phase>process-resources</phase>
						<configuration>
							<target>
								<copy todir="${project.build.directory}/test-root">
									<fileset dir="${project.basedir}/src/main/webapp"/>
								</copy>
								<copy file="${project.basedir}/src/main/webapp/WEB-INF/classes/META-INF/${db}_persistence.xml"
									tofile="${project.build.directory}/${project.build.finalName}/WEB-INF/classes/META-INF/persistence.xml" 
									overwrite="true"/>
							</target>
							<skip>${om.quick.build}</skip>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId><!-- maybe integration tests should be used -->
				<inherited>true</inherited>
				<configuration>
					<workingDirectory>${project.build.directory}</workingDirectory>
					<excludedGroups>org.apache.openmeetings.test.selenium.SeleniumTests</excludedGroups>
					<systemPropertyVariables>
						<om.home>${project.build.directory}/test-root</om.home>
						<languages.home>${project.basedir}/src/main/webapp/languages</languages.home>
						<red5.root>red5.root</red5.root>
						<backups.dir>${project.build.directory}/old-backups</backups.dir>
					</systemPropertyVariables>
					<additionalClasspathElements>
						<additionalClasspathElement>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</additionalClasspathElement>
					</additionalClasspathElements>
					<skip>${om.quick.build}</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>download-test-data</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>download</goal>
						</goals>
						<configuration>
							<url>https://openmeetings.googlecode.com/svn/repository</url>
							<includes>backup_*.zip</includes>
							<toDir>${project.build.directory}/old-backups</toDir>
							<skip>${maven.test.skip}</skip>
						</configuration>
					</execution>
					<execution>
						<id>download-red5-server</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>download-single</goal>
						</goals>
						<configuration>
							<url>https://github.com/Red5/red5-server/releases/download</url>
							<fromFile>v${red5-server.version}/red5-server-${red5-server.version}-server.tar.gz</fromFile>
							<toDir>${project.build.directory}</toDir>
							<skip>${om.quick.build}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>truezip-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-red5-server</id>
						<goals>
							<goal>copy</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<fileset>
								<directory>${project.build.directory}/red5-server-${red5-server.version}-server.tar.gz/red5-server-${red5-server.version}</directory>
								<outputDirectory>${project.build.directory}/server</outputDirectory>
							</fileset>
							<skip>${om.quick.build}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>basic-move-server-resources</id><!-- All this should be removed and implemented somehow differently -->
						<phase>verify</phase>
						<configuration>
							<target>
								<delete dir="${server.webapps}/installer"/>
								<delete dir="${server.webapps}/live"/>
								<delete dir="${server.webapps}/vod"/>
								<mkdir dir="${server.webapps.om}"/>
								<unzip src="${project.build.directory}/${project.build.finalName}.war" dest="${server.webapps.om}"/>
								<delete dir="${server.webapps.om}/META-INF"/>
								<copy todir="${project.build.directory}/server" overwrite="true">
									<fileset dir="${project.basedir}/../WebContent/red5">
										<include name="*.sh"/>
										<include name="*.bat"/>
									</fileset>
								</copy>
								<copy file="${project.basedir}/../WebContent/red5/index.html" todir="${project.build.directory}/server/webapps/root" overwrite="true"/>
								<chmod dir="${project.build.directory}/server" perm="ugo+rx" includes="**/*.sh"/>
								<move todir="${server.lib}">
									<fileset dir="${server.webapps.om}/WEB-INF/lib">
										<include name="spring-*"/>
										<include name="geronimo-jpa*"/>
										<include name="commons-fileupload*"/>
									</fileset>
								</move>
								<delete>
									<fileset dir="${server.webapps.om}/WEB-INF/lib">
										<include name="aopalliance*"/>
										<include name="slf4j-*"/>
									</fileset>
								</delete>
							</target>
							<skip>${om.quick.build}</skip>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>move-server-resources</id><!-- All this should be removed and implemented somehow differently -->
						<phase>verify</phase>
						<configuration>
							<target>
								<mkdir dir="${server.webapps.om}/screenshare"/>
								<copy todir="${server.webapps.om}/WEB-INF/lib" overwrite="true">
									<fileset dir="${project.basedir}/../openmeetings-core/target">
										<include name="openmeetings*.jar"/>
									</fileset>
									<fileset dir="${project.basedir}/../openmeetings-db/target">
										<include name="openmeetings*.jar"/>
									</fileset>
									<fileset dir="${project.basedir}/../openmeetings-install/target">
										<include name="openmeetings*.jar"/>
									</fileset>
									<fileset dir="${project.basedir}/../openmeetings-service/target">
										<include name="openmeetings*.jar"/>
									</fileset>
									<fileset dir="${project.basedir}/../openmeetings-util/target">
										<include name="openmeetings*.jar"/>
									</fileset>
									<fileset dir="${project.basedir}/../openmeetings-webservice/target">
										<include name="openmeetings*.jar"/>
									</fileset>
									<fileset dir="${project.build.directory}/${project.build.finalName}/WEB-INF/lib">
										<include name="openmeetings*.jar"/>
									</fileset>
								</copy>
								<copy todir="${server.webapps.om}/screenshare" overwrite="true">
									<fileset dir="${project.basedir}/../openmeetings-screenshare/target/jnlp"/>
								</copy>
								<copy todir="${server.webapps.om}/public" overwrite="true">
									<fileset dir="${project.basedir}/../openmeetings-flash/target">
										<include name="*.swf"/>
									</fileset>
								</copy>
								<copy todir="${server.webapps.om}/WEB-INF" overwrite="true">
									<fileset dir="${project.build.directory}/${project.build.finalName}/WEB-INF">
										<include name="**/*.xml"/>
									</fileset>
								</copy>
								<copy todir="${server.webapps.om}/css" overwrite="true">
									<fileset dir="${project.basedir}/src/main/webapp/css">
										<include name="**/*.css"/>
										<include name="**/*.png"/>
										<include name="**/*.gif"/>
									</fileset>
								</copy>
								<copy todir="${server.webapps.om}/WEB-INF/classes" overwrite="true">
									<fileset dir="${project.basedir}/src/main/java">
										<include name="**/*.html"/>
										<include name="**/*.js"/>
										<include name="**/*.css"/>
										<include name="**/*.xml"/>
									</fileset>
								</copy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/main/webapp/WEB-INF/classes</directory>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.7,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>wagon-maven-plugin</artifactId>
										<versionRange>[1.0-beta-5,)</versionRange>
										<goals>
											<goal>download</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-remote-resources-plugin</artifactId>
										<versionRange>[1.2.1,)</versionRange>
										<goals>
											<goal>process</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.8,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.apache.openmeetings</groupId>
			<artifactId>openmeetings-util</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.openmeetings</groupId>
			<artifactId>openmeetings-db</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.openmeetings</groupId>
			<artifactId>openmeetings-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.openmeetings</groupId>
			<artifactId>openmeetings-install</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.openmeetings</groupId>
			<artifactId>openmeetings-service</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.openmeetings</groupId>
			<artifactId>openmeetings-webservice</artifactId>
		</dependency>
		<!--dependency>
			<groupId>org.apache.openmeetings</groupId>
			<artifactId>openmeetings-flash</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.apache.openmeetings</groupId>
			<artifactId>openmeetings-screenshare</artifactId>
			<scope>provided</scope>
		</dependency-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency> <!-- TODO most probably should be removed -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>ro.fortsoft.wicket.dashboard</groupId>
			<artifactId>wicket-dashboard-core</artifactId>
			<version>${wicket-dashboard.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-extensions</artifactId>
			<version>${wicket.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-auth-roles</artifactId>
			<version>${wicket.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-native-websocket-core</artifactId>
			<version>${wicket.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-native-websocket-tomcat</artifactId>
			<version>${wicket.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-devutils</artifactId>
			<version>${wicket.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-datetime</artifactId>
			<version>${wicket.version}</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.wicket-jquery-ui</groupId>
			<artifactId>wicket-jquery-ui-core</artifactId>
			<version>${wicket.version}</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.wicket-jquery-ui</groupId>
			<artifactId>wicket-jquery-ui</artifactId>
			<version>${wicket.version}</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.wicket-jquery-ui</groupId>
			<artifactId>wicket-jquery-ui-calendar</artifactId>
			<version>${wicket.version}</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.wicket-jquery-ui</groupId>
			<artifactId>wicket-jquery-ui-plugins</artifactId>
			<version>${wicket.version}</version>
		</dependency>
		<dependency>
			<groupId>org.wicketstuff</groupId>
			<artifactId>wicketstuff-urlfragment</artifactId>
			<version>${wicket.version}</version>
		</dependency>
		<dependency>
			<groupId>org.wicketstuff</groupId>
			<artifactId>wicketstuff-html5</artifactId>
			<version>${wicket.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaynberg.wicket.select2</groupId>
			<artifactId>wicket-select2</artifactId>
			<version>${select2.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.svenmeier.wicket-dnd</groupId>
			<artifactId>wicket-dnd</artifactId>
			<version>${dnd.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons-fileupload.version}</version>
		</dependency>
		<!-- Test dependencies -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.openmeetings</groupId>
			<artifactId>openmeetings-core</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
